plugins {
    id 'org.springframework.boot' version '2.7.8' // Плагин для Spring Boot
    id 'java'
    id 'application'
}

group 'com.otp'
version '1.0'

repositories {
    mavenCentral()
}

dependencies {
    // Для работы с PostgreSQL
    implementation 'org.postgresql:postgresql:42.7.5'

    // Spring Boot Web для HTTP серверов
    implementation 'org.springframework.boot:spring-boot-starter-web:2.7.8'

    // Для работы с Spring Data JPA (если используете)
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.7.8'

    // Для работы с JSON
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.2'

    // Для работы с JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // Для Email рассылки
    implementation 'com.sun.mail:javax.mail:1.6.2'

    // Логирование
    implementation 'org.slf4j:slf4j-api:2.0.7'
    implementation 'ch.qos.logback:logback-classic:1.4.8'

    // Для шифрования паролей
    implementation 'org.springframework.boot:spring-boot-starter-security:2.7.8' // Добавлена версия

    implementation 'org.mindrot:jbcrypt:0.4'

    // Для тестирования
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.2'
    testImplementation 'org.mockito:mockito-core:3.11.2'
}

application {
    mainClass = 'com.otp.Main' // Указываем главный класс приложения
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17) // Указываем версию Java
    }
}

test {
    useJUnitPlatform() // Настройка для запуска тестов через JUnit Platform
}

tasks.named('jar') {
    manifest {
        attributes(
                'Main-Class': 'com.otp.Main' // Указываем главный класс JAR
        )
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}


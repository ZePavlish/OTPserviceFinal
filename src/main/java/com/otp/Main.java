package com.otp;
import com.otp.services.AuthService;

import com.otp.controllers.AuthController;
import com.otp.controllers.OtpController;
import com.otp.services.OtpService;
import com.sun.net.httpserver.HttpServer;

import java.net.InetSocketAddress;

public class Main {
    public static void main(String[] args) {
        try {
            // 1. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–µ—Ä–≤–∏—Å—ã
            AuthService authService = new AuthService();
            OtpService otpService = new OtpService();

            // 2. –°–æ–∑–¥–∞–µ–º HTTP-—Å–µ—Ä–≤–µ—Ä —Å –±—ç–∫–ª–æ–≥–æ–º (–æ—á–µ—Ä–µ–¥—å —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π)
            HttpServer server = HttpServer.create(
                    new InetSocketAddress(8080),
                    50 // –±—ç–∫–ª–æ–≥
            );

            // 3. –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å –∫–æ—Ä–Ω–µ–≤—ã–º –ø—É—Ç–µ–º
            server.createContext("/api/auth", new AuthController(authService));
            server.createContext("/api/otp", new OtpController(otpService));

            // 4. –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º executor (–ø—É–ª –ø–æ—Ç–æ–∫–æ–≤)
            server.setExecutor(java.util.concurrent.Executors.newCachedThreadPool());

            // 5. –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä
            server.start();
            System.out.println("‚úÖ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://localhost:8080");

            // 6. –î–æ–±–∞–≤–ª—è–µ–º shutdown hook –¥–ª—è graceful shutdown
            Runtime.getRuntime().addShutdownHook(new Thread(() -> {
                System.out.println("üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞...");
                server.stop(1); // –∑–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ –æ—Å—Ç–∞–Ω–æ–≤–∫–æ–π (—Å–µ–∫—É–Ω–¥—ã)
            }));

        } catch (Exception e) {
            System.err.println("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Å–µ—Ä–≤–µ—Ä–∞:");
            e.printStackTrace();
            System.exit(1);
        }
    }
}